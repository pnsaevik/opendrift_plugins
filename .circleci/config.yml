# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share
# across projects, enabling you to create encapsulated, parameterized commands,
# jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can
  # use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.5.0

build-template: &tmpl
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
    - image: continuumio/miniconda3
    resource_class: small
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - install_conda_environment
      - run:
          name: Install package
          command: conda run -n opendrift pip install .
      - run:
          name: Run tests
          command: conda run -n opendrift pytest


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  python_3_10: {<<: *tmpl, environment: [PYTHON_VERSION=3.10]}
  python_3_9: {<<: *tmpl, environment: [PYTHON_VERSION=3.9]}
  python_3_8: {<<: *tmpl, environment: [PYTHON_VERSION=3.8]}
  python_3_7: {<<: *tmpl, environment: [PYTHON_VERSION=3.7]}

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  pytest_jobs: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - python_3_10
      #- python_3_9
      #- python_3_8
      #- python_3_7

commands:
  install_conda_environment:
    steps:
      - run:
          name: Install requirements
          no_output_timeout: 30m
          command: |
            if [ ! -e /opt/conda/envs/opendrift ]; then
              conda create -n opendrift -y -c conda-forge "python=${PYTHON_VERSION}" opendrift 
            fi

      - run:
          name: List environment
          command: |
            conda list -n opendrift
